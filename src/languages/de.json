{
  "code": "de",
  "navbar-contact": "Kontakt",
  "navbar-home": "Über mich",
  "navbar-portfolio": "Projekte",
  "navbar-skills": "Fähigkeiten",

  "about-name": "Adam Szabo",
  "about-title": "Junior Frontend-Entwickler",

  "flag-language": "Sprache",
  "flag-theme": "Thema",

  "home-name": "Hallo, mein name ist Adam Szabo",
  "home-junior": " und ich bin ein Junior Frontend-Developer",
  "home-about": "Die Welt der Programmierung hat mich schon immer angezogen. Für meine berufliche Weiterentwicklung habe ich nicht nur autodidaktisch gelernt, sondern auch ein Bootcamp absolviert. Seitdem habe ich die Bereiche gefunden, die für mich besonders spannend und herausfordernd erscheinen: Frontend- und Mobile-Anwendungsentwicklung. Ich liebe neue Technologien und bin immer offen für neue Möglichkeiten, die mir weiteres Wachstum ermöglichen.",
  "home-cv": "Lebenslauf",
  "home-portfolio": "Meine Arbeiten",

  "portfolio-fullstackBlog": "ich habe den Node.js API Project: Build a Blog Project API 2023-Kurs auf Udemy abgeschlossen. Ich erweitere ihn kontinuierlich um zusätzliche Funktionen und arbeite auch am Frontend. Derzeit umfassen die Funktionen die Registrierung, Anmeldung, das Schreiben und Bearbeiten von Beiträgen, das Liken von Beiträgen sowie das Schreiben und Bearbeiten von Kommentaren. Benutzer können das Profil des Autors anzeigen, wo sie den Benutzer mögen oder blockieren können, und der Autor kann sehen, wer sein Profil angesehen hat. Benutzer können auch ihr eigenes Profil überprüfen, um zu verfolgen, wen sie mögen oder blockiert haben. Es gibt einen Änderungsreiter, auf dem Benutzer ihr Profilbild, den Vornamen, den Nachnamen und das Passwort ändern können. Es gibt die Möglichkeit, das Benutzerprofil zu löschen. Es steht eine Admin-Schnittstelle zur Verfügung, auf der alle Benutzer angezeigt und vom Administrator blockiert werden können. In diesem Fall kann der blockierte Benutzer keine Beiträge erstellen.Ein blockierter Benutzer kann eine Nachricht an den Administrator senden. Außerdem wurde ein Dunkelmodus hinzugefügt. Videodemonstration verfügbar.",

  "portfolio-movie": "Filme/Serien können mit Hilfe der OMDB-API gesucht werden. Sie können zu Favoriten hinzugefügt werden. Weitere Informationen werden in einem Modal-Fenster angezeigt.",
  "portfolio-angularTodo": "Dies ist eine Angular-basierte TODO-Liste, für die ich PrimeNG verwendet habe.",
  "portfolio-angularPokemon": "Dies ist eine Pokémon-Anwendung, die 20 Pokémon auflistet. Sie können nach ihren Typen filtern und durch ein Popup-Fenster weitere Informationen zu einem bestimmten Pokémon anzeigen.",
  "portfolio-nativeMovie": "Diese App verwendet die OMDb-API, um Film- und Seriendaten abzurufen. Sie können Filme und Serien manuell durchsuchen oder die Suchfunktion verwenden. Sie können Elemente auch zu Ihrer Favoritenliste hinzufügen. Wenn Sie Benachrichtigungen zulassen, erhalten Sie lokale Benachrichtigungen. Bei Serien können Sie alle Staffeln sehen und Details zu einzelnen Episoden anzeigen.",
  "portfolio-flutterPokemon": "Meine erste Flutter-Anwendung, die die PokeAPI verwendet. Sie ruft alle Pokémon ab, zeigt jedes in einer Kartenansicht an und navigiert zu einem Detailbildschirm, auf dem mehr Informationen über das Pokémon angezeigt werden. Benutzer können Pokémon zu Favoriten hinzufügen, und es gibt eine dynamische Suchfunktion.",
  "portfolio-flutterWeather": "Es beginnt mit einem Startbildschirm, auf dem Sie den Namen der Stadt eingeben können. Wenn bei der Anfrage ein gültiger Stadtname gefunden wird, werden das tägliche und stündliche Wetter angezeigt. Wenn nichts eingegeben wird, erscheint eine Fehlermeldung und eine Fortsetzung ist nicht möglich. Wenn ein ungültiger Name eingegeben wird, erscheint eine Fehlermeldung. Es enthält ein modales Fenster, wenn Sie die Wetterdaten einer anderen Stadt abrufen möchten. Die Wetter-Icons und Hintergrundbilder passen sich den Wetterbedingungen an. Es verwendet die OpenMeteo-API.",
  "portfolio-webshop": "Webshop-Anwendung, die mit React + Vite und TypeScript entwickelt wurde. Für das Styling wurde Tailwind CSS verwendet. Die Grundlage bildet die Open-Source-API FakeStoreAPI. Für das Management aller Anfragen-Stati wurde useReducer verwendet. Die Website besteht aus vier Seiten. Auf der Hauptseite werden die Produkte im Kartenformat angezeigt. Es besteht die Möglichkeit, Artikel zu den Favoriten hinzuzufügen, in den Warenkorb zu legen und nach Kategorien zu filtern. Außerdem kann man zu einer Detailseite navigieren, auf der weitere Informationen zum Produkt verfügbar sind. Im Warenkorb werden die Produkte einzeln angezeigt, wobei du die Menge erhöhen, verringern oder entfernen kannst. Beim Checkout kannst du den Promo-Code „DISCOUNT10“ eingeben, um einen 10% Rabatt zu erhalten.",
  "portfolio-flutterCelestical": "Diese App, die mit Flutter erstellt wurde, ist eine Anwendung für Himmelskörper. Sie besteht aus einem Hauptbildschirm und einer Detailseite. Das Hauptziel war es, Animationen zu üben.",
  "portfolio-tetris": "Tetris-Spiel, bei dem die Formen in zufälligen Farben erscheinen und gedreht werden können. Wenn eine Reihe vollständig gefüllt ist, wird sie gelöscht, und der Spieler erhält Punkte. Wenn der Spieler verliert, erscheint eine Game Over-Nachricht mit der Punktzahl und der Möglichkeit, neu zu starten.",
  "portfolio-weather": "Eine einfache Wetteranwendung, die die Open-Meteo API verwendet, um Wetterdaten abzurufen. Ziel der Anwendung ist es, den Einsatz und die Integration von Redux und Material UI in einer modernen React-Anwendung zu üben.",
  "portfolio-todoList": "Eine Fullstack-Todo-Anwendung, die das Ausführen von CRUD-Operationen ermöglicht. Ziel war die Nutzung und Integration von Prisma ORM und MySQL im Backend sowie ShadCN UI im Frontend.",

  "portfolio-memorygame-name": "Memory-Spiel",
  "portfolio-quiz-name": "Quiz",
  "portfolio-movie-name": "Film",
  "portfolio-angularTodo-name": "Aufgabenliste",
  "portfolio-angularPokemon-name": "Pokemon",
  "portfolio-nativeCrypto-name": "Crypto",
  "portfolio-flutterPokemon-name": "Pokemon",
  "portfolio-flutterWeather-name": "Wetter",
  "portfolio-nativeMovie-name": "Film",
  "portfolio-webshop-name": "Webshop",
  "portfolio-flutterCelestical-name": "Himmelskörper",
  "portfolio-tetris-name": "Tetris-Spiel",
  "portfolio-weather-name": "Wetter",
  "portfolio-todoList-name": "Todo List",

  "portfolio-title": "Sieh dir meine Arbeiten an.",
  "skills-title": "Diese Technologien beherrsche ich.",

  "loading-loading": "Laden",

  "modal-close": "Schließen"
}
